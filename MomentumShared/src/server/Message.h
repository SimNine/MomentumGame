#pragma once

#define DEFAULT_MSG_DATASIZE 30
#define DEFAULT_MSG_TEXTSIZE 50
#define DEFAULT_MSG_SIZE (DEFAULT_MSG_DATASIZE + DEFAULT_MSG_TEXTSIZE)

#include "Enums.h"
#include "Coord.h"

enum MSGTYPE {
	NONE,
	MOVE,
	ACTION,
	SOUND,
	INQUIRY,
	SETCLIENTPLAYER,
	LEAVE,
	RESYNCGAME,
	SELECT,
	NEXTTURN,
	STARTGAME,
	DONELOAD,
	AISTEP,
	INFO,
	CLEAR,
	CONNECT,
	DISCONNECT,
	TEXT,
	GAMECONFIG,
	LOGIN,
	CREATEUSER,
	ERR,
	PLACEPROG,
	CHAT,
	PROGINVENTORY,
	CREDITPICKUP,
	LEVELUNLOCK,
	PING
};

enum MSGSOUNDNAME {
	MSGSOUNDNAME_MOVE,
	MSGSOUNDNAME_DAMAGE,
	MSGSOUNDNAME_HEAL,
	MSGSOUNDNAME_ZERO,
	MSGSOUNDNAME_ONE,
	MSGSOUNDNAME_SIZEMOD,
	MSGSOUNDNAME_SPEEDMOD,
	MSGSOUNDNAME_PICKUPCREDIT
};

enum MSGINQUIRYTYPE {
	MSGINQUIRYTYPE_TILECONTENTS,
	MSGINQUIRYTYPE_SELECTEDTILE,
	MSGINQUIRYTYPE_SELECTEDPROG
};

enum MSGSELECTTYPE {
	MSGSELECTTYPE_PROGRAM,
	MSGSELECTTYPE_TILE,
	MSGSELECTTYPE_ACTION
};

enum MSGLEVELTYPE {
	MSGLEVELTYPE_LOAD,
	MSGLEVELTYPE_SAVE,
	MSGLEVELTYPE_CLEAR
};

enum MSGINFOTYPE {
	// entity creation
	PLAYER_ADD,
	PLATFORM_ADD,

	// entity deletion
	PLAYER_REM,
	PLATFORM_REM,

	// player movement
	PLAYER_MOVE
};

enum MSGGAMECONFIGTYPE {
	// gamemodes
	MSGGAMECONFIGTYPE_FFA,
	MSGGAMECONFIGTYPE_TEAMDM,
	MSGGAMECONFIGTYPE_COOP,
	MSGGAMECONFIGTYPE_CAMPAIGN,

	// default levels
	MSGGAMECONFIGTYPE_LEVEL_HASH,
	MSGGAMECONFIGTYPE_LEVEL_CROSS,
	MSGGAMECONFIGTYPE_LEVEL_ARRAY,
	MSGGAMECONFIGTYPE_LEVEL_SHOWDOWN,

	// for numbered levels
	MSGGAMECONFIGTYPE_LEVEL_NUMBERED
};

struct Message {
	// message type and subtype
	MSGTYPE type;
	char subType;

	// ids
	int clientID;

	// general-use position fields
	Coord pos;
	Coord pos2;

	// general-purpose ints
	int num;
	int num2;

	// text
	char text[DEFAULT_MSG_SIZE];
};

void _serializeMessage(char* buffer, Message m);

Message _deserializeMessage(char* in);

void _printMessage(Message m);